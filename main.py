from config import *
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command, Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery
from aiocryptopay import AioCryptoPay, Networks
from aiocryptopay.exceptions import CodeErrorFactory
from re import compile, sub
import logging
from functions import *
from json import loads, dumps
from random import randint, choices
from datetime import time

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

bot = Bot(token=BOT_TOKEN, parse_mode='HTML')
dp = Dispatcher(bot)

coinflip_heads_chance = (2, 1, 2)
coinflip_tails_chance = (1, 2, 1)

crypto = AioCryptoPay(token=CRYPTOBOT_TOKEN, network=Networks.MAIN_NET)

is_promotion = False
promotion_message = None
promotion_prize = 0
promotion_bets = []

async def get_max_promo():
    global promotion_bets

    max_promo = (None, 0)
    for bet in promotion_bets:
        if bet[2] > max_promo[1]:
            max_promo = (bet[0], bet[2], bet[1])
    return max_promo

async def update_promo_message():
    global promotion_message

    max_promo = await get_max_promo()
    await promotion_message.edit_text('''[üíé] –ë–æ–Ω—É—Å –æ—Ç <a href="https://t.me/+-0qkbRaDO484ZWEy">ForsBet</a> 

<code>–°–∞–º–∞—è –±–æ–ª—å—à–∞—è —Å—Ç–∞–≤–∫–∞ –¥–æ 22:00 –ø–æ–ª—É—á–∏—Ç 15$</code>

<code>–ù–∏–∫–Ω–µ–π–º ‚Äî %s</code>

<code>–°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏ ‚Äî %.2f$</code>

<b><i>–ü—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –ø—Ä–æ—á—Ç–∏—Ç–µ ‚Äî https://teletype.in/@forsbet/help</i></b>

<u>–ü–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫ ‚Äî @forsb3t</u>''' % (max_promo[0], max_promo[1]))

async def count_bet(user, amount):
    global is_promotion
    global promotion_bets
    global promotion_message
    global promotion_prize

    if time() > time(22,0):
        is_promotion = False
        promotion_bets = []

        max_promo = await get_max_promo()

        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å –≤—ã–ø–ª–∞—Ç—É', url=SUPPORT_LINK))

        promotion_message = await bot.send_message('[üíé] –í—ã–ø–ª–∞—Ç–∞ –≤ %.2f$ –∑–∞ —Å–∞–º—É—é –±–æ–ª—å—à—É—é —Å—Ç–∞–≤–∫—É –¥–ª—è %s –Ω–∞ —Å—É–º–º—É %f$' % (promotion_prize, max_promo[0], max_promo[1]), reply_markup=keyboard)
        await promotion_message.pin()

        return

    for i in range(len(promotion_bets)):
        if promotion_bets[i][1] == user[1]:
            promotion_bets[i][2] += amount
            await update_promo_message()
            return
    promotion_bets.append((user[0], user[1], amount))
    await update_promo_message()

@dp.message_handler(commands=['start_promotion'])
async def start_promotion(message: types.Message):
    global is_promotion
    global promotion_message
    global promotion_prize

    if message.chat.id in ADMINS:
        args = message.text.split()
        try:
            promotion_prize = float(args[1])
            keyboard = InlineKeyboardMarkup()
            keyboard.add(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É', url=INVOICE_LINK))
            promotion_message = await bot.send_message(CHANNEL_ID, '''[üíé] –ë–æ–Ω—É—Å –æ—Ç <a href="https://t.me/+-0qkbRaDO484ZWEy">ForsBet</a> 

<code>–°–∞–º–∞—è –±–æ–ª—å—à–∞—è —Å—Ç–∞–≤–∫–∞ –¥–æ 22:00 –ø–æ–ª—É—á–∏—Ç %i$</code>

<b><i>–ü—Ä–µ–∂–¥–µ —á–µ–º —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É, –ø—Ä–æ—á—Ç–∏—Ç–µ ‚Äî https://teletype.in/@forsbet/help</i></b>

<u>–ü–µ—Ä–µ—Ö–æ–¥–Ω–∏–∫ ‚Äî @forsb3t</u>''' % promotion_prize, reply_markup=keyboard)
            await promotion_message.pin()
            is_promotion = True
            await bot.send_message(message.chat.id, "–ê–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!")
        except ValueError:
            await bot.send_message(message.chat.id, "–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—É–º–º–∞ –ø—Ä–∏–∑–∞!")

@dp.message_handler(commands=['create_invoice'])
async def create_invoice(message: types.Message):
    if message.chat.id in ADMINS:
        args = message.text.split()
        try:
            amount = float(args[1])
            invoice = await crypto.create_invoice(amount=amount, asset='USDT')
            keyboard = InlineKeyboardMarkup()
            keyboard.add(InlineKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å", url=invoice.bot_invoice_url))
            await bot.send_message(message.chat.id, "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á—ë—Ç–∞ –Ω–∞ %i$" % amount, reply_markup=keyboard)
        except ValueError:
            await bot.send_message(message.chat.id, "–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è!")

@dp.channel_post_handler(chat_id=LOGS_ID)
async def invoice_handler(message: types.Message):
    global is_promotion

    user = message.entities[0].user
    try:
        first_name = sub(compile('<.*?>'), '', user.first_name)
    except AttributeError:
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞', url=SUPPORT_LINK))
        keyboard.add(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É', url=INVOICE_LINK))
        return await bot.send_message(CHANNEL_ID, '<b>‚ùå –û—à–∏–±–∫–∞ —É –∏–≥—Ä–æ–∫–∞ %s</b>\n\n<b>–í–∫–ª—é—á–∏—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∫—É –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ > –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</b>\n–°—Ä–µ–¥—Å—Ç–≤–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à CryptoBot –∫–æ—à–µ–ª—ë–∫ <b>–∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ 10%%</b>\n\n<u>–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ <a href="%s">—Å—Ç–∞—Ç—å—é</> –Ω–∏–∂–µ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É.</u>' % (first_name, HELP_LINK), reply_markup=keyboard)
    invoice = await get_invoice_from_message(message.text)
    amount = invoice['amount']

    try:
        if is_promotion: await count_bet((first_name, user.id), amount)
    except:
        pass

    try:
        comment = invoice['comment']
        bet = comment.lower()
    except AttributeError:
        cashback = amount - (amount / 10)
        check = await crypto.create_check(asset='USDT', amount=cashback, pin_to_user_id=user.id)
        keyboard = InlineKeyboardMarkup()
        keyboard.add(InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞', url=check.bot_check_url))
        keyboard.add(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É', url=INVOICE_LINK))
        return await bot.send_message(CHANNEL_ID, '<b>‚ùå –û—à–∏–±–∫–∞ —É –∏–≥—Ä–æ–∫–∞ %s</b>\n\n<b>–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∫–æ–º–∞–Ω–¥—É!</b>\n–°—Ä–µ–¥—Å—Ç–≤–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à CryptoBot –∫–æ—à–µ–ª—ë–∫ <b>–∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ 10%%</b>\n\n<u>–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ <a href="%s">—Å—Ç–∞—Ç—å—é</> –Ω–∏–∂–µ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É.</u>' % (first_name, HELP_LINK), reply_markup=keyboard)

    logger.info(f"NEW PAY | USER @{user.username} | {user.id} | PAY: {amount} | COMMENT: {comment}")
    
    await bot.send_message(CHANNEL_ID, '‚ö°Ô∏è –ò–≥—Ä–æ–∫ <b>%s</b> —Å—Ç–∞–≤–∏—Ç <b>%.2f$</b>\n\n<blockquote>–ò—Å—Ö–æ–¥: %s</blockquote>\n\n<b>–£–¥–∞—á–∏!</b>' % (first_name, amount, comment))
    keyboard = InlineKeyboardMarkup()
    keyboard.add(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É', url=INVOICE_LINK))
    try:
        if bet.startswith('–∫—É–±'):
            try:
                value = int(bet.split()[1])
                dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
                dice_value = dice_message.dice.value
                if dice_value == value:
                    check = await crypto.create_check(asset='USDT', amount=amount * 5, pin_to_user_id=user.id)
                    keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                    await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * 5, LINKS_TEXT), reply_markup=keyboard)
                else:
                    await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
            except ValueError:
                cashback = amount - (amount / 10)
                check = await crypto.create_check(asset='USDT', amount=cashback, pin_to_user_id=user.id)
                keyboard = InlineKeyboardMarkup()
                keyboard.add(InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞', url=check.bot_check_url))
                keyboard.add(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É', url=INVOICE_LINK))
                return await bot.send_message(CHANNEL_ID, '<b>‚ùå –û—à–∏–±–∫–∞ —É –∏–≥—Ä–æ–∫–∞ %s</b>\n\n<b>–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!</b>\n–°—Ä–µ–¥—Å—Ç–≤–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à CryptoBot –∫–æ—à–µ–ª—ë–∫ <b>–∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ 10%%</b>\n\n<u>–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ <a href="%s">—Å—Ç–∞—Ç—å—é</> –Ω–∏–∂–µ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É.</u>' % (first_name, HELP_LINK), reply_markup=keyboard)
        elif bet == '–º–µ–Ω—å—à–µ':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice_value = dice_message.dice.value
            if dice_value in (1, 2, 3):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value in (4, 5, 6):
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–±–æ–ª—å—à–µ':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice_value = dice_message.dice.value
            if dice_value in (4, 5, 6):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value in (1, 2, 3):
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('—á—ë—Ç–Ω–æ–µ', '—á–µ—Ç–Ω–æ–µ', '—á—ë—Ç', '—á–µ—Ç'):
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice_value = dice_message.dice.value
            if dice_value in (2, 4, 6):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value in (1, 3, 5):
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('–Ω–µ—á—ë—Ç–Ω–æ–µ', '–Ω–µ—á–µ—Ç–Ω–æ–µ', '–Ω–µ—á—ë—Ç', '–Ω–µ—á–µ—Ç'):
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice_value = dice_message.dice.value
            if dice_value in (1, 3, 5):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value in (2, 4, 6):
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet.startswith('wheel'):
            value = int(bet.split()[1])
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value == value:
                check = await crypto.create_check(asset='USDT', amount=amount * 35, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * 35, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '1-18':
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value in range(1, 19):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '1-36':
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value in range(1, 37):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '1-12':
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value in range(1, 13):
                check = await crypto.create_check(asset='USDT', amount=amount * 2.6, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * 2.6, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '13-24':
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value in range(13, 25):
                check = await crypto.create_check(asset='USDT', amount=amount * 2.6, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * 2.6, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '25-36':
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value in range(25, 37):
                check = await crypto.create_check(asset='USDT', amount=amount * 2.6, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * 2.6, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i].\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–∫—Ä–∞—Å–Ω–æ–µ':
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value in (1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], –∫—Ä–∞—Å–Ω–æ–µ.\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value == 0:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], –∑–µ–ª–µ–Ω–æ–µ.\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], —á–µ—Ä–Ω–æ–µ.\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('—á–µ—Ä–Ω–æ–µ', '—á—ë—Ä–Ω–æ–µ'):
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value in (2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], —á–µ—Ä–Ω–æ–µ.\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value == 0:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], –∑–µ–ª–µ–Ω–æ–µ.\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], –∫—Ä–∞—Å–Ω–æ–µ.\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('–∑–µ–ª–µ–Ω–æ–µ', '–∑–µ–ª—ë–Ω–æ–µ'):
            dice_value = randint(0, 36)
            await bot.send_sticker(CHANNEL_ID, WHEEL_STICKERS[dice_value])
            if dice_value == 0:
                check = await crypto.create_check(asset='USDT', amount=amount * 35, pin_to_user_id=user.id)
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], –∑–µ–ª–µ–Ω–æ–µ.\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value in (2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35):
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], —á–µ—Ä–Ω–æ–µ.\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–æ –∑–Ω–∞—á–µ–Ω–∏–µ [%i], –∫—Ä–∞—Å–Ω–æ–µ.\n\n<blockquote>–ö—Ä—É—Ç–∏ –∫–æ–ª–µ—Å–æ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('–æ—Ä–µ–ª', '–æ—Ä—ë–ª'):
            rand = randint(0, 2)
            dice_value = coinflip_heads_chance[rand] if amount < 5 else 1
            await bot.send_sticker(CHANNEL_ID, HEADS_AND_TAILS_STICKERS[dice_value-1])
            if dice_value == 1:
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª –æ—Ä—ë–ª.\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞.\n\n<blockquote>–ë—Ä–æ—Å–∞–π –º–æ–Ω–µ—Ç–∫—É –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % LINKS_TEXT, reply_markup=keyboard)
        elif bet == '—Ä–µ—à–∫–∞':
            rand = randint(0, 2)
            dice_value = coinflip_tails_chance[rand] if amount < 5 else 1
            await bot.send_sticker(CHANNEL_ID, HEADS_AND_TAILS_STICKERS[dice_value-1])
            if dice_value == 2:
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –í—ã–ø–∞–ª–∞ —Ä–µ—à–∫–∞.\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –í—ã–ø–∞–ª –æ—Ä—ë–ª.\n\n<blockquote>–ë—Ä–æ—Å–∞–π –º–æ–Ω–µ—Ç–∫—É –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % LINKS_TEXT, reply_markup=keyboard)
        elif bet == '—Å–ª–æ—Ç—ã':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé∞')
            dice_value = dice_message.dice.value
            if dice_value in (1, 22, 43):
                check = await crypto.create_check(asset='USDT', amount=amount * 7, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ó–∞–Ω–æ—Å!\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (amount * 7, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value in (16, 32, 48):
                check = await crypto.create_check(asset='USDT', amount=amount * 5, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ö—É—à!\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (amount * 5, LINKS_TEXT), reply_markup=keyboard)
            elif dice_value == 64:
                check = await crypto.create_check(asset='USDT', amount=amount * 10, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –î–∂–µ–∫–ø–æ—Ç!\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (amount * 10, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ö—Ä—É—Ç–∏ —Å–ª–æ—Ç—ã –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % LINKS_TEXT, reply_markup=keyboard)
        elif bet in ('–∫', '–Ω', '–±'):
            if bet == '–∫':
                await bot.send_message(CHANNEL_ID, '‚úä')
                await bot.send_message(CHANNEL_ID, '‚úã')
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ò–≥—Ä–∞–π –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % LINKS_TEXT, reply_markup=keyboard)
            elif bet == '–Ω':
                await bot.send_message(CHANNEL_ID, '‚úåÔ∏è')
                await bot.send_message(CHANNEL_ID, '‚úä')
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ò–≥—Ä–∞–π –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % LINKS_TEXT, reply_markup=keyboard)
            elif bet == '–±':
                await bot.send_message(CHANNEL_ID, '‚úã')
                await bot.send_message(CHANNEL_ID, '‚úå')
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ò–≥—Ä–∞–π –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % LINKS_TEXT, reply_markup=keyboard)
        elif bet == '—Ü–µ–Ω—Ç—Ä':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üéØ')
            dice_value = dice_message.dice.value
            if dice_value == 6:
                check = await crypto.create_check(asset='USDT', amount=amount * 3, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * 3, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π –¥—Ä–æ—Ç–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–∫—Ä–∞—Å–Ω—ã–π':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üéØ')
            dice_value = dice_message.dice.value
            if dice_value % 2 == 0:
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π –¥—Ä–æ—Ç–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–±–µ–ª—ã–π':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üéØ')
            dice_value = dice_message.dice.value
            if dice_value % 2 != 0:
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π –¥—Ä–æ—Ç–∏–∫ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–≥–æ–ª':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='‚öΩ')
            dice_value = dice_message.dice.value
            if dice_value in (3, 4, 5):
                check = await crypto.create_check(asset='USDT', amount=amount * 1.5, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * 1.5, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ü–∏–Ω–∞–π –º—è—á –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–ø—Ä–æ–º–∞—Ö':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='‚öΩ')
            dice_value = dice_message.dice.value
            if dice_value in (1, 2):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ü–∏–Ω–∞–π –º—è—á –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–ø–æ–ø–∞–ª':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üèÄ')
            dice_value = dice_message.dice.value
            if dice_value in (4, 5):
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π –º—è—á –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–º–∏–º–æ':
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üèÄ')
            dice_value = dice_message.dice.value
            if dice_value in (1, 2, 3):
                check = await crypto.create_check(asset='USDT', amount=amount * 1.5, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * 1.5, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π –º—è—á –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('–≤—Å–µ', '—Å—Ç—Ä–∞–π–∫', 'strike'):
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé≥')
            dice_value = dice_message.dice.value
            if dice_value == 6:
                check = await crypto.create_check(asset='USDT', amount=amount * 2, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * 2, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π —à–∞—Ä –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('1', '2', '3', '4', '5', '6'):
            bet = int(bet)
            dice_message = await bot.send_dice(CHANNEL_ID, emoji='üé≥')
            dice_value = dice_message.dice.value
            if bet in (1, 2, 3):
                if 6 - dice_value == bet:
                    check = await crypto.create_check(asset='USDT', amount=amount * 3, pin_to_user_id=user.id)
                    keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                    await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * 3, LINKS_TEXT), reply_markup=keyboard)
                else:
                    await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π —à–∞—Ä –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
            elif bet == 4:
                    await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π —à–∞—Ä –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
            elif bet == 5:
                if dice_value == 2:
                    check = await crypto.create_check(asset='USDT', amount=amount * 3, pin_to_user_id=user.id)
                    keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                    await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * 3, LINKS_TEXT), reply_markup=keyboard)
                else:
                    await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π —à–∞—Ä –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
            elif bet == 6:
                if dice_value == 1:
                    check = await crypto.create_check(asset='USDT', amount=amount * 3, pin_to_user_id=user.id)
                    keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                    await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>–ü–æ–±–µ–¥–∞!</b>\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å <b>—á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</b></blockquote>\n\n%s' % (amount * 3, LINKS_TEXT), reply_markup=keyboard)
                else:
                    await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>–ü—Ä–æ–∏–≥—Ä—ã—à!\n\n<blockquote>–ë—Ä–æ—Å–∞–π —à–∞—Ä –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('–ø1', '–ø–æ–±–µ–¥–∞ 1', '–ø–≤–ø', '–¥—É—ç–ª—å'):
            dice1_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice2_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')

            dice1_value = dice1_message.dice.value
            dice2_value = dice2_message.dice.value

            if dice1_value > dice2_value:
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ –≤ –ø–æ–ª—å–∑—É –ø–µ—Ä–≤–æ–≥–æ –∫—É–±–∏–∫–∞ [%i:%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice1_value, dice2_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ –≤ –ø–æ–ª—å–∑—É –≤—Ç–æ—Ä–æ–≥–æ –∫—É–±–∏–∫–∞ [%i:%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice1_value, dice2_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('–ø2', '–ø–æ–±–µ–¥–∞ 2'):
            dice1_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice2_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')

            dice1_value = dice1_message.dice.value
            dice2_value = dice2_message.dice.value

            if dice2_value > dice1_value:
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ –≤ –ø–æ–ª—å–∑—É –≤—Ç–æ—Ä–æ–≥–æ –∫—É–±–∏–∫–∞ [%i:%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice1_value, dice2_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ –≤ –ø–æ–ª—å–∑—É –ø–µ—Ä–≤–æ–≥–æ –∫—É–±–∏–∫–∞ [%i:%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice1_value, dice2_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet == '–Ω–∏—á—å—è':
            dice1_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice2_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')

            dice1_value = dice1_message.dice.value
            dice2_value = dice2_message.dice.value

            if dice1_value == dice2_value:
                check = await crypto.create_check(asset='USDT', amount=amount * COEFFICIENT, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice1_value, dice2_value, amount * 3, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice1_value, dice2_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('2–º', '2 –º–µ–Ω—å—à–µ'):
            dice1_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice2_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')

            dice1_value = dice1_message.dice.value
            dice2_value = dice2_message.dice.value

            if dice1_value < 4 and dice2_value < 4:
                check = await crypto.create_check(asset='USDT', amount=amount * 2.6, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice1_value, dice2_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice1_value, dice2_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('2–±', '2 –±–æ–ª—å—à–µ'):
            dice1_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice2_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')

            dice1_value = dice1_message.dice.value
            dice2_value = dice2_message.dice.value

            if dice1_value > 3 and dice2_value > 3:
                check = await crypto.create_check(asset='USDT', amount=amount * 2.6, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice1_value, dice2_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice1_value, dice2_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('2–Ω', '2 –Ω–µ—á–µ—Ç', '2 –Ω–µ—á—ë—Ç'):
            dice1_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice2_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')

            dice1_value = dice1_message.dice.value
            dice2_value = dice2_message.dice.value

            if dice1_value in (1, 3, 5) and dice2_value in (1, 3, 5):
                check = await crypto.create_check(asset='USDT', amount=amount * 2.6, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice1_value, dice2_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice1_value, dice2_value, LINKS_TEXT), reply_markup=keyboard)
        elif bet in ('2—á', '2 —á–µ—Ç', '2 —á—ë—Ç'):
            dice1_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')
            dice2_message = await bot.send_dice(CHANNEL_ID, emoji='üé≤')

            dice1_value = dice1_message.dice.value
            dice2_value = dice2_message.dice.value

            if dice1_value in (2, 4, 6) and dice2_value in (2, 4, 6):
                check = await crypto.create_check(asset='USDT', amount=amount * 2.6, pin_to_user_id=user.id)
                keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å —á–µ–∫', url=check.bot_check_url))
                await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É –≤ —Ä–∞–∑–º–µ—Ä–µ %.2f$.</blockquote></b>\n\n%s' % (dice1_value, dice2_value, amount * COEFFICIENT, LINKS_TEXT), reply_markup=keyboard)
            else:
                await bot.send_photo(CHANNEL_ID, photo=LOSE, caption='<b>‚ùå –ü—Ä–æ–∏–≥—Ä—ã—à! –°–µ—Å—Å–∏—è –∑–∞–∫—Ä—ã—Ç–∞ —Å–æ —Å—á–µ—Ç–æ–º [%i:%i].\n\n<blockquote>–ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏ –∑–∞–Ω–æ–≤–æ –∏ –∏—Å–ø—ã—Ç–∞–π —Å–≤–æ—é —É–¥–∞—á—É!</blockquote></b>\n\n%s' % (dice1_value, dice2_value, LINKS_TEXT), reply_markup=keyboard)
        else:
            cashback = amount - (amount / 10)
            check = await crypto.create_check(asset='USDT', amount=cashback, pin_to_user_id=user.id)
            keyboard = InlineKeyboardMarkup()
            keyboard.add(InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞', url=check.bot_check_url))
            keyboard.add(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É', url=INVOICE_LINK))
            return await bot.send_message(CHANNEL_ID, '<b>‚ùå –û—à–∏–±–∫–∞ —É –∏–≥—Ä–æ–∫–∞ %s</b>\n\n<b>–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!</b>\n–°—Ä–µ–¥—Å—Ç–≤–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à CryptoBot –∫–æ—à–µ–ª—ë–∫ <b>–∑–∞ –≤—ã—á–µ—Ç–æ–º –∫–æ–º–∏—Å—Å–∏–∏ 10%%</b>\n\n<u>–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ <a href="%s">—Å—Ç–∞—Ç—å—é</> –Ω–∏–∂–µ –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É.</u>' % (first_name, HELP_LINK), reply_markup=keyboard)
    except CodeErrorFactory as e:
        if e.name == 'NOT_ENOUGH_COINS':
            keyboard.add(InlineKeyboardButton('üéÅ –ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à', url=SUPPORT_LINK))
            await bot.send_photo(CHANNEL_ID, photo=WIN, caption='<b>üéâ –ü–æ–±–µ–¥–∞!\n\n<blockquote>–ü–æ–±–µ–¥–∏—Ç–µ–ª—å –º–æ–∂–µ—Ç –∑–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à —É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.</blockquote></b>\n\n%s' % LINKS_TEXT, reply_markup=keyboard)
    except Exception as e:
        print(e)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)